#include <iostream>
#include <list>
#include <vector>
#include <queue>



using namespace std;

//queue -- первый вошёл первый вышел. не является контейнером, адаптер для него. ограничивают функционал увеличивая скорость работы. контейнер может быть любым (лист, deque)
//можно добавить только в конец.
//вектор не может быть в основе queue потому что он реализовывает массив


//priority_queue. элементы можно сразу складывать по приоритету при извлечении. не может использовать лист. только вектор, deque


int main() {
	setlocale(LC_ALL, "RU");

	priority_queue<int> q;
	q.push(2);
	q.push(3);
	q.push(4);
	q.push(5);

	//по умолчанию сортируются от большего к меньшему при добавлении

	while (!q.empty()) {
		cout << q.top() << endl;
		q.pop();
	}



	//queue
	//cout << q.front() << endl;

	//auto a = q._Get_container();

	/*while (!q.empty()) {
		cout << q.front() << endl;
		q.pop();
	}*/

	//queue
	//q.back(); //позволяет посмотреть последний добавленный элемент без извлечения
	//q.emplace(); //добавить элемент в конец бех копии, implase с копией
	//q.empty(); //проверяет пуст ли контейнер, возвращает true или false
	//q.front();//позволяет посмотреть первый добавленный элемент без извлечения
	//q.pop();//извлекает элемент из очерди. начиная с первого естественно
	//q.size();
	//q.swap(); //предназначен для обмена контейнерами содержимыми
	//q._Get_container();//возвращает контейнер лежащий во снове. по умолчанию в основе лежит дек
	//q.pop//для извлечения первого элемента из очереди




	return 0;
}
